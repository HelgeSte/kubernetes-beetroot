apiVersion: v1
kind: Namespace
metadata:
  name: test
---
apiVersion: v1
data:
  DB_Host: bXlzcWw=
  DB_Password: cGFzd3Jk
  DB_User: cm9vdA==
kind: Secret
metadata:
  namespace: test
  name: app-secret
# kubectl get secrets
# kubectl get secret app-secret -o yaml # get the secret values
# kubectl describe secrets
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
  namespace: test
  labels:
    type: local
spec:
  storageClassName: local-path
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/db-data"
    # Docker Desktop used the following file: 
    # C:\Docker\wsl\DockerDesktopWSL\data\ext4.vhdx:
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: test
spec:
  # Use the previously created PV:
  storageClassName: local-path
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: secret-pod
  name: secret-pod
  namespace: test
spec:
  volumes:
    - name: mysql-data
      persistentVolumeClaim:
        claimName: mysql-pvc
  containers:
  - name: secret-pod
    #image: nginx
    # nginx works but mysql pod fails
    image: mysql:8.0
    name: secret-pod
    ports:
      - containerPort: 8080
    env:
    # You find the correct variables names on Docker Hub:
    #   https://hub.docker.com/_/mysql
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: DB_Password
    - name: MYSQL_DATABASE
      value: wordpress
    - name: MYSQL_USER
      value: wordpress
    - name: MYSQL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: DB_Password
    volumeMounts:
      - name: mysql-data
        mountPath: /var/lib/mysql
    #envFrom:
    #- secretRef:
    #    name: app-secret
---

